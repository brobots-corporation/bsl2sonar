name: Release
on:
  push:
    on:
      push:
        tags:
          - 'v*'
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

  test:
    name: Unittest
    strategy:
      matrix:
        go-version: [1.16.x]
        platform: [ ubuntu-latest, macos-latest, windows-2016 ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage -covermode=atomic ./...
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage
          flags: unittests
          env_vars: go-version,platform
      - name: Cache downloaded modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  build:
    needs: test
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, windows/amd64, darwin/amd64
        goos: [linux, windows-2016, darwin]
        goarch: [amd64]

    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.17
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "."
          binary_name: "bsl2sonar"
          extra_files: LICENSE README.md